library(data.table)
library(moments)
library(plyr)
library(dplyr)
library(ggpubr)
library(tidyverse)
library(broom)
library(AICcmodavg)
library(lmtest)
library(rosetta)
library(ufs)


setwd("C:/Users/jason/OneDrive/Desktop/NCU/8520_Inferential Statistics and Predictive Analytics/Week 4")
Data <- fread("C:/Users/jason/OneDrive/Desktop/NCU/8520_Inferential Statistics and Predictive Analytics/Week 4/VideoGameData.csv")


Data_Sel <- Data %>%  select(Date, TotalTime, Advertising)

SunData <- Data %>% select(Date, TotalTime) %>% filter(Date == "Sunday")
MonData <- Data %>% select(Date, TotalTime) %>% filter(Date == "Monday")
TueData <- Data %>% select(Date, TotalTime) %>% filter(Date == "Tuesday")
WedData <- Data %>% select(Date, TotalTime) %>% filter(Date == "Wednesday")
ThuData <- Data %>% select(Date, TotalTime) %>% filter(Date == "Thursday")
FriData <- Data %>% select(Date, TotalTime) %>% filter(Date == "Friday")
SatData <- Data %>% select(Date, TotalTime) %>% filter(Date == "Saturday")

write.csv(Data_Sel, "Data_Sel.csv")

##Descriptive Statistic##




Model <- lm(TotalTime ~ Date + Advertising + Date * Advertising, data = Data_Sel)
anova(Model)

#             Df Sum Sq Mean Sq F value    Pr(>F)    
#Date         6 420.25   70.04  3.1716 0.0133277 *  
#Advertising  1 337.60  337.60 15.2871 0.0003919 ***
#Residuals   36 795.02   22.08                      
#---
#        Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

##plots##
par(mfrow=c(2,2))
plot(Model)
par(mfrow=c(1,1))

##Post-Hoc Test##
#TukeyHSD#
Model1 <- aov(TotalTime ~ Date + Advertising + Date*Advertising, data = Data_Sel)
tukey.model <- TukeyHSD(Model1)

tukey.plot <- aov(Model1)
tukey.test <- TukeyHSD(tukey.plot)
plot(tukey.test)

#Games Howell Test#

gh.model <- posthocTGH(y = Data_Sel$TotalTime, x = Data_Sel$Date, 
                       method = c("games-howell"))
plotGamesHowell <- function(ght.out,
                            x.axis.label = "Comparison",
                            y.axis.label = "Effect Size",
                            axis.adjust = 0,
                            adjust.x.spacing = 5){
        #ght.out <- as.data.frame(ght.out[[1]]) # not used 
        means <- ght.out$intermediate$dmeans
        categories <- ght.out$intermediate$pairNames
        groups <- length(categories)
        ci.low <- ght.out$intermediate$gh.low
        ci.up  <- ght.out$intermediate$gh.high  
}
plotGamesHowell(gh.model)


##mean data of groups##
mean.time.data <- Data_Sel %>% 
        group_by(Date) %>% 
        summarise(TotalTime = mean(TotalTime))
#Date      TotalTime
#<chr>         <dbl>
#        1 Friday        0.21 
#2 Monday        7.57 
#3 Saturday      0.978
#4 Sunday        0.342
#5 Thursday      7.55 
#6 Tuesday       3.85 
#7 Wednesday     0.48 

one.way.plot <- ggplot(Data_Sel, aes(x = Date, y = TotalTime))+
        geom_point(cex = 1.5, pch = 1.0, position = position_jitter(w = 0.1, h=0))

one.way.plot <- one.way.plot + 
        stat_summary(fun.data = 'mean_se', geom = 'errorbar', width = 0.2)+
        stat_summary(fun.data = 'mean_se', geom = 'pointrange') +
        geom_point(data=mean.time.data, aes(x=Date, y=TotalTime))
one.way.plot

##Post hoc##
#emmeans#
library(emmeans)
emmeans(tukey.plot, pairwise ~ Date + Advertising + Date * Advertising, adjust = "Tukey")
ref_grid(tukey.plot)
emmpred <- matrix(predict(ref_grid(tukey.plot)), nrow = 2)


##Assumtpion Tests##
dwtest(Model1)#0.4193
shapiro.test(Model1$residuals)#0.0001004

library("car")
qqPlot(Model1$residuals, ylim = c(-10,10),
       main = "QQ-Plot",
       xlab = "Residuals")

hist(x = Model$residuals)

bptest(Model)#8.805e-05
plot(lm(TotalTime ~ Date + Advertising + Date*Advertising, data = Data_Sel))



hist(Data$TotalTime) #histogram for Sunday

##Summary Statistic##   
#Date               Visits         VisitTime       TotalTime         Game          
#Length:44          Min.   : 0.000   Min.   :0.000   Min.   : 0.00   Length:44         
#Class :character   1st Qu.: 0.000   1st Qu.:0.000   1st Qu.: 0.00   Class :character  
#Mode  :character   Median : 0.000   Median :0.000   Median : 0.00   Mode  :character  
#                   Mean   : 1.455   Mean   :0.705   Mean   : 2.87                     
#                   3rd Qu.: 1.000   3rd Qu.:1.255   3rd Qu.: 1.98                     
#                   Max.   :10.000   Max.   :4.440   Max.   :28.45                     
#Advertising       
#Length:44         
#Class :character  
#Mode  :character  

#Mode#
Mode <- function(x) {
        uq <- unique(x)
        uq[which.max(tabulate(match(x,uq)))]
}

Mode(Data$Visits)#0.000
Mode(Data$VisitTime) #0.000
Mode(Data$TotalTime)#0.000

#Skew#
skewness(Data$Visits)#1.864568
skewness(Data$VisitTime)#1.56521
skewness(Data$TotalTime)#2.578654

#Kurtosis#
kurtosis(Data$Visits)#5.182163
kurtosis(Data$VisitTime)#4.843563
kurtosis(Data$TotalTime)#9.587571

#Standard Deviation#
var(Data$Visits)^.5 #2.671595
var(Data$VisitTime)^.5 #1.09071
var(Data$TotalTime)^.5 #6.00944



prop.table(table(Data$Advertising))
#No Yes 
#0.5 0.5 
prop.table(table(Data$Game))
#Police  Theif 
#0.5    0.5

table(Data$Game, Data$Advertising)
       #No Yes
#Police 11  11
#Theif  11  11

count(Data, 'Date')

table(Data$Game, Data$Visits)
#        0  1  3  5  6  7  8 10
#Police 15  2  1  1  1  1  1  0
#Thief  12  6  1  0  1  0  1  1

table(Data$Advertising, Data$Visits)
#     0  1  3  5  6  7  8 10
#No  19  2  1  0  0  0  0  0
#Yes  8  6  1  1  2  1  2  1

table(Data$Date, Data$Visits)
#          0 1 3 5 6 7 8 10
#Friday    7 1 0 0 0 0 0  0
#Monday    1 1 0 0 2 0 2  0
#Saturday  3 3 0 0 0 0 0  0
#Sunday    4 2 0 0 0 0 0  0
#Thursday  4 0 0 0 0 1 0  1
#Tuesday   3 0 2 1 0 0 0  0
#Wednesday 5 1 0 0 0 0 0  0


table(Data$Date, Data$TotalTime)


hist(Data$Visits, main = "Visits Histogram", xlab = "Bins", ylab = "Frequency",
     col = "sky blue")


###Analyzing Visits###
##Date ~ Visits
Vis_Date_Table <- table(Data$Date, Data$Visits)
barplot(Vis_Date_Table, legend.text = rownames(Vis_Date_Table), 
        main = "Date and Visit Boxplot",
        xlab = "Visits", ylab = "Frequency")


##Game ~ Visits
Vis_Game_Table <- table(Data$Game, Data$Visits)
barplot(Vis_Game_Table, legend.text = rownames(Vis_Game_Table), 
        main = "Game and Visit Boxplot", xlab = "Visit",
        ylab = "Frequency")


##Game ~ Advertising
Vis_Ad_Table <- table(Data$Advertising, Data$Visits)
barplot(Vis_Ad_Table, legend.text = rownames(Vis_Ad_Table), 
       main = "Advertising and Visit Boxplot", xlab = "Visit", 
       ylab = "Frequency")


###Analyzing Total Time###
TT_Date_Table <- table(Data$Date, Data$TotalTime)
barplot(TT_Date_Table, legend.text = rownames(TT_Date_Table), 
        col = 1:nrow(TT_Date_Table),main = "Date and TotalTime",
        xlab = "Total Time", ylab = "Frequency")


##Game ~ Visits
TT_Game_Table <- table(Data$Game, Data$TotalTime)
barplot(TT_Game_Table, legend.text = rownames(TT_Game_Table), col = 1:nrow(TT_Game_Table))


##Game ~ Advertising
TT_Ad_Table <- table(Data$Advertising, Data$TotalTime)
barplot(TT_Ad_Table, legend.text = rownames(TT_Ad_Table), col = 1:nrow(TT_Ad_Table))



###Regression###
#Data Transformation#
Data1 <- Data
Data1 <- Data1 %>% mutate(Date = recode(Date, 'Sunday' = "0", 'Monday' = "1", 'Tuesday' = "2",
                                        'Wednesday' = "3", 'Thursday' = "4", 'Friday' = "5", 
                                        'Saturday' = "6",), 
                          Game = recode(Game, 'Police' = "0", 'Theif' = "1"),
                          Advertising = recode(Advertising, 'No' = "0", 'Yes' = "1"),
                          Date = as.numeric(Date), 
                          Game = as.numeric(Game),
                          Advertising = as.numeric(Advertising)) 
#Modeling#
Model <- lm(formula = Visits ~ Game + Advertising + Date, data = Data1)

#Residuals:
#        Min      1Q  Median      3Q     Max 
#-3.5473 -1.1520 -0.2315  0.3608  7.5461 

#Coefficients:
#        Estimate Std. Error t value Pr(>|t|)   
#(Intercept)  1.05154    0.84625   1.243  0.22126   
#Game         0.09091    0.71898   0.126  0.90002   
#Advertising  2.40485    0.71973   3.341  0.00182 **
#        Date        -0.27334    0.18012  -1.518  0.13699   
#---
#        Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

